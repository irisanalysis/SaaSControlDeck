#!/bin/bash
set -e

echo "üöÄ Verifying Vercel deployment configuration..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Error: package.json not found. Please run from project root.${NC}"
    exit 1
fi

echo -e "${YELLOW}üìã Pre-flight checks...${NC}"

# Check Node.js version
NODE_VERSION=$(node --version)
echo "‚úÖ Node.js version: $NODE_VERSION"

# Check if dependencies are installed
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}üì¶ Installing dependencies...${NC}"
    npm ci --prefer-offline --no-audit --no-fund --ignore-scripts
else
    echo "‚úÖ Dependencies already installed"
fi

# Verify package.json scripts
echo -e "${YELLOW}üîç Verifying build scripts...${NC}"
if npm run-script --silent 2>/dev/null | grep -q "vercel-build"; then
    echo "‚úÖ vercel-build script found"
else
    echo -e "${RED}‚ùå vercel-build script missing${NC}"
    exit 1
fi

# Set production environment
export NODE_ENV=production
export VERCEL=1
export CI=true
export SKIP_TYPE_CHECK=true

echo -e "${YELLOW}üèóÔ∏è  Testing build process...${NC}"

# Clean previous build
rm -rf frontend/.next

# Test the build
if npm run vercel-build; then
    echo -e "${GREEN}‚úÖ Build successful!${NC}"
    
    # Check output directory
    if [ -d "frontend/.next" ]; then
        echo -e "${GREEN}‚úÖ Output directory created: frontend/.next${NC}"
        
        # Check build size
        BUILD_SIZE=$(du -sh frontend/.next | cut -f1)
        echo "üìä Build size: $BUILD_SIZE"
        
        # Check for critical files
        if [ -f "frontend/.next/BUILD_ID" ]; then
            echo "‚úÖ Build ID file present"
        fi
        
        if [ -d "frontend/.next/static" ]; then
            echo "‚úÖ Static assets directory present"
        fi
        
        if [ -d "frontend/.next/server" ]; then
            echo "‚úÖ Server directory present"
        fi
        
        echo -e "${GREEN}üéâ Deployment verification successful!${NC}"
        echo -e "${GREEN}üì§ Ready for Vercel deployment${NC}"
        
    else
        echo -e "${RED}‚ùå Build output directory not found${NC}"
        exit 1
    fi
    
else
    echo -e "${RED}‚ùå Build failed${NC}"
    echo -e "${YELLOW}üí° Check the error messages above for details${NC}"
    exit 1
fi

echo ""
echo -e "${YELLOW}üîß Deployment tips:${NC}"
echo "‚Ä¢ Build size should be under 250MB total"
echo "‚Ä¢ Large dependencies are cached by Vercel"
echo "‚Ä¢ TypeScript errors are skipped in production builds"
echo "‚Ä¢ Check Vercel dashboard for deployment logs"
echo ""
echo -e "${GREEN}‚úÖ Local verification complete. Proceed with git push to trigger Vercel deployment.${NC}"