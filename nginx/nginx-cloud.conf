# ===========================================
# Nginx 云服务器生产配置
# ===========================================
# SaaS Control Deck 全栈AI平台反向代理和负载均衡配置

# 用户和工作进程配置
user nginx;
worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;

# 错误日志配置
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件配置
events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# HTTP配置块
http {
    # ===========================================
    # 基础配置
    # ===========================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    charset utf-8;
    sendfile on;
    sendfile_max_chunk 512k;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    
    # 超时配置
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_header_timeout 60;
    client_body_timeout 60;
    send_timeout 60;
    
    # 缓冲区配置
    client_max_body_size 100m;
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;
    output_buffers 2 32k;
    
    # ===========================================
    # 日志格式配置
    # ===========================================
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_addr":"$upstream_addr",'
        '"http_x_forwarded_for":"$http_x_forwarded_for"'
        '}';
    
    access_log /var/log/nginx/access.log json_combined;
    
    # ===========================================
    # Gzip压缩配置
    # ===========================================
    
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_disable "MSIE [1-6]\.";
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.ms-fontobject
        application/wasm
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
    
    # ===========================================
    # SSL配置
    # ===========================================
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # ===========================================
    # 速率限制配置
    # ===========================================
    
    # API速率限制
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=1r/s;
    
    # 连接限制
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # ===========================================
    # 上游服务器配置
    # ===========================================
    
    # 前端服务负载均衡
    upstream frontend_backend {
        least_conn;
        server frontend-app:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # Backend Pro1 API网关
    upstream api_pro1_backend {
        least_conn;
        server api-gateway-pro1:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Backend Pro2 API网关
    upstream api_pro2_backend {
        least_conn;
        server api-gateway-pro2:8100 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # 监控服务
    upstream grafana_backend {
        server grafana:3000 max_fails=2 fail_timeout=30s;
    }
    
    upstream prometheus_backend {
        server prometheus:9090 max_fails=2 fail_timeout=30s;
    }
    
    upstream kibana_backend {
        server kibana:5601 max_fails=2 fail_timeout=30s;
    }
    
    # MinIO Console
    upstream minio_console_backend {
        server minio-storage:9001 max_fails=2 fail_timeout=30s;
    }
    
    # ===========================================
    # 缓存配置
    # ===========================================
    
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m max_size=1g inactive=30d use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:50m max_size=500m inactive=1h use_temp_path=off;
    
    # ===========================================
    # 安全头配置
    # ===========================================
    
    # 安全头映射
    map $sent_http_content_type $security_headers {
        default "nosniff";
    }
    
    # ===========================================
    # HTTP到HTTPS重定向服务器
    # ===========================================
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Let's Encrypt验证
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # 重定向所有HTTP请求到HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # ===========================================
    # 主应用HTTPS服务器
    # ===========================================
    
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name yourdomain.com www.yourdomain.com;
        
        # SSL证书配置
        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;
        
        # 安全头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' ws: wss:; frame-ancestors 'self';" always;
        
        # 连接限制
        limit_conn perip 20;
        limit_conn perserver 1000;
        
        # 根目录代理到前端应用
        location / {
            limit_req zone=general burst=5 nodelay;
            
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            
            # 超时配置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 缓冲区配置
            proxy_buffer_size 4k;
            proxy_buffers 64 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # 前端静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 30d;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            
            add_header X-Cache-Status $upstream_cache_status always;
            add_header Cache-Control "public, max-age=2592000" always;
            
            expires 30d;
        }
        
        # Next.js特殊路径
        location /_next/static/ {
            proxy_pass http://frontend_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            expires 1y;
        }
        
        # API代理配置
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            # 根据路径智能路由到不同的后端
            location /api/v1/pro1/ {
                rewrite ^/api/v1/pro1/(.*)$ /v1/$1 break;
                proxy_pass http://api_pro1_backend;
            }
            
            location /api/v1/pro2/ {
                rewrite ^/api/v1/pro2/(.*)$ /v1/$1 break;
                proxy_pass http://api_pro2_backend;
            }
            
            # 默认路由到Pro1
            location /api/ {
                rewrite ^/api/(.*)$ /$1 break;
                proxy_pass http://api_pro1_backend;
            }
            
            # 通用代理配置
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API响应缓存（谨慎使用）
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 5m;
            proxy_cache_use_stale error timeout updating;
            
            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # WebSocket支持
        location /ws/ {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }
        
        # 健康检查端点
        location /health {
            access_log off;
            proxy_pass http://frontend_backend/api/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # 机器人和爬虫限制
        location /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow: /admin/\nDisallow: /api/\nSitemap: https://$host/sitemap.xml\n";
        }
        
        # 安全配置
        location ~* \.(php|jsp|asp|aspx|do|action)$ {
            deny all;
        }
        
        location ~ /\. {
            deny all;
        }
    }
    
    # ===========================================
    # API子域名服务器
    # ===========================================
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.yourdomain.com;
        
        # SSL证书配置
        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        
        # API专用安全头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        
        # Pro1 API
        location /v1/pro1/ {
            limit_req zone=api burst=20 nodelay;
            rewrite ^/v1/pro1/(.*)$ /v1/$1 break;
            proxy_pass http://api_pro1_backend;
            
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Pro2 API
        location /v1/pro2/ {
            limit_req zone=api burst=20 nodelay;
            rewrite ^/v1/pro2/(.*)$ /v1/$1 break;
            proxy_pass http://api_pro2_backend;
            
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 默认路由
        location / {
            return 404;
        }
    }
    
    # ===========================================
    # 监控服务器（内部访问）
    # ===========================================
    
    # Grafana
    server {
        listen 443 ssl http2;
        server_name grafana.yourdomain.com;
        
        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        
        # 基础认证或IP限制
        # auth_basic "Monitoring Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;
        
        location / {
            proxy_pass http://grafana_backend;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Kibana
    server {
        listen 443 ssl http2;
        server_name kibana.yourdomain.com;
        
        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        
        location / {
            proxy_pass http://kibana_backend;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # MinIO Console
    server {
        listen 443 ssl http2;
        server_name minio-console.yourdomain.com;
        
        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        
        location / {
            proxy_pass http://minio_console_backend;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket支持
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}